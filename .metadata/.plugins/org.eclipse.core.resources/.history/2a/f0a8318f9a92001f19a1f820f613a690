package com.programmingSachin.Array;

import java.util.HashSet;

//WAJP to find out the missing element in the given array

public class MissingEleFromArray {
	public static void main(String[] args) {
		int[] arr = { 1, 4, 9 };
		
		boolean[] barray = new boolean[arr[arr.length]+1];
		
		for(int num: arr) {
			barray[num] = true;
		}
		
		for(int i=0;i<barray.length;i++) {
			if(barray[i]==false) {
				System.out.println(barray[i]);
			}
		}
		
		
		

//		int lastEle = arr[arr.length - 1];
//
//		int i = 0;
//		int j = 1;
//		do {
//			if (arr[i] == j) {
//				j++;
//				i++;
//				while (j < arr[i]) {
//					System.out.println(j);
//					j++;
//				}
//			}
//		} while (i < arr.length - 1);
		
		
	
		
//2nd way: rage should be given : from 1 to 9 find the missing number which is not present in the array
//		int[] arr = { 1, 4, 9 };
//		int start = 1;
//		int end = 9;
//		HashSet<Integer> hs = new HashSet(); //we are taking hashset becuz if suppose array elements are duplicate that time that elements only one time get stored in hashset object
//		
//		//inserting all the array elements inside hashset
//		for(int i = 0; i<arr.length; i++) {
//			hs.add(arr[i]);
//		}
//		
//		//checking whether elements stored in hashset or not
//		for (Integer integer : hs) {
//			System.out.println(integer);
//		}
//		
//		//finding what are the elements are not present inside hashset using range(which is given)
//		System.out.println("missing elements are : ");
//		for(int i  = start; i<=end ;i++) {
//			if (!hs.contains(i)) {
//				System.out.print(i+" ");
//			}
//		}
		
	}
	
}

